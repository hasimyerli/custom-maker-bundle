<?php

namespace App\Maker;

use Symfony\Bundle\MakerBundle\ConsoleStyle;
use Symfony\Bundle\MakerBundle\DependencyBuilder;
use Symfony\Bundle\MakerBundle\Generator;
use Symfony\Bundle\MakerBundle\InputConfiguration;
use Symfony\Bundle\MakerBundle\Maker\AbstractMaker;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;

class MakeService extends AbstractMaker {

    public static function getCommandName(): string
    {
        return 'make:service';
    }

    public function configureCommand(Command $command, InputConfiguration $inputConfig)
    {
        $command
            ->setDescription('Creates a new service class.')
            ->addArgument('service-class', null, 'Choose a name for your service class (e.g. <fg=yellow>Hello</>)')
            ->setHelp(file_get_contents(__DIR__ . '/help.txt'));
    }

    public function interact(InputInterface $input, ConsoleStyle $io, Command $command)
    {
        // TODO: Change the autogenerated stub
    }

    public function generate(InputInterface $input, ConsoleStyle $io, Generator $generator)
    {
        $serviceClassNameDetails = $generator->createClassNameDetails(
            $input->getArgument('service-class'),
            'Service\\'
        );

        $generator->generateClass(
            $serviceClassNameDetails->getFullName(),
            __DIR__ . '/Service.template.php');

       $generator->writeChanges();

        $io->text([
            'Service class created.',
        ]);
    }

    public function configureDependencies(DependencyBuilder $dependencies)
    {
        // TODO: Implement configureDependencies() method.
    }
}